%YAML:1.0

#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam; 
imu: 1         
num_of_cam: 2  

imu_topic: "/mavros/imu/data"
image0_topic: "/camera/infra1/image_rect_raw"
image1_topic: "/camera/infra2/image_rect_raw"
output_path: "/home/fast/cnh/vslam-ws/vins-output"

cam0_calib: "left.yaml"
cam1_calib: "right.yaml"
image_width: 848
image_height: 480
   

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.

# body_T_cam0: !!opencv-matrix
#    rows: 4
#    cols: 4
#    dt: d
#    data: [ 1.5384252430867829e-02, 3.7790460982512208e-02,
#        9.9916725618680724e-01, 9.9260092031255340e-02,
#        -9.9974838716603842e-01, -1.5733331622483249e-02,
#        1.5988265539531643e-02, 7.0206373625865487e-02,
#        1.6324433712963049e-02, -9.9916182039486823e-01,
#        3.7538906872268574e-02, -7.1917045103720947e-02, 0., 0., 0., 1. ]
# body_T_cam1: !!opencv-matrix
#    rows: 4
#    cols: 4
#    dt: d
#    data: [ 1.6174672637189191e-02, 3.7155920502228490e-02,
#        9.9917857139588029e-01, 1.0149487779596147e-01,
#        -9.9973470918045404e-01, -1.5787738332869505e-02,
#        1.6770765581997638e-02, -2.9234612735469231e-02,
#        1.6397903065734465e-02, -9.9918476013696556e-01,
#        3.6890701878411480e-02, -6.8412954888133301e-02, 0., 0., 0., 1. ]

# body_T_cam0: !!opencv-matrix
#    rows: 4
#    cols: 4
#    dt: d
#    data: [ 0.0, 0.0, 1, 0.12,
#           -1.0, 0.0, 0., 0.05,
#           0., -1., 0., -0.08,
#           0., 0., 0., 1.]
# body_T_cam1: !!opencv-matrix
#    rows: 4
#    cols: 4
#    dt: d
#    data: [ 0.0, 0.0, 1, 0.12,
#           -1.0, 0.0, 0., -0.05,
#           0., -1., 0., -0.08,
#           0., 0., 0., 1.]

body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [ 2.8209968046712164e-02,  2.5504050334742623e-02,  9.9927660891233017e-01,  1.4134796077168804e-01,
          -9.9939276204067240e-01, -1.9734381062197270e-02,  2.8716918093832422e-02,  5.2882410184664101e-02,
           2.0452503111340004e-02, -9.9947991356535759e-01,  2.4931857048076655e-02, -7.3932985686773020e-02, 
           0.,                      0.,                      0.,                      1. ]
body_T_cam1: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [ 2.9319835984806919e-02,  2.5307354063551779e-02,  9.9924966101977031e-01,  1.4566725654633925e-01,
          -9.9935502177727353e-01, -1.9993834107712605e-02,  2.9829298453336983e-02, -4.1851292368676261e-02,
           2.0733732572043140e-02, -9.9947975688753954e-01,  2.4704815434560379e-02, -7.1972542308409368e-02, 
           0.,                      0.,                      0.,                      1. ]

#Multiple thread support
multiple_thread: 1

#feature traker paprameters
max_cnt: 200            # max feature number in feature tracking
min_dist: 10            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.20         # accelerometer measurement noise standard deviation. #0.2   0.04
gyr_n: 0.020        # gyroscope measurement noise standard deviation.     #0.05  0.004
acc_w: 0.0020         # accelerometer bias random work noise standard deviation.  #0.002
gyr_w: 0.000020       # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.805       # 150 # gravity magnitude

#unsynchronization parameters
estimate_td: 1                     # online estimate time offset between camera and imu
td: -0.005886                            # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
load_previous_pose_graph: 1        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "/home/fast/cnh/vslam-ws/vins-output/pose_graph/" # save and load path
save_image: 0                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
